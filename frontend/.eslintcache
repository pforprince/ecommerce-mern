[{"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\index.js":"1","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\App.js":"2","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Footer.js":"3","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\HomeScreen.js":"4","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\ProductScreen.js":"5","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Header.js":"6","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Rating.js":"7","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Product.js":"8","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\store.js":"9","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\reducers\\productReducers.js":"10","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\constants\\productConstants.js":"11","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\actions\\productActions.js":"12","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Message.js":"13","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Loader.js":"14","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\CartScreen.js":"15","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\reducers\\cartReducers.js":"16","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\constants\\cartConstants.js":"17","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\actions\\cartAction.js":"18","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\reducers\\userReducer.js":"19","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\constants\\userConstants.js":"20","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\LoginScreen.js":"21","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\actions\\userActions.js":"22","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\FormContainer.js":"23","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\RegisterScreen.js":"24","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\ProfileScreen.js":"25","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\ShippingScreen.js":"26","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\CheckoutSteps.js":"27","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\PaymentScreen.js":"28","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\reducers\\orderReducers.js":"30","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\constants\\orderConstants.js":"31","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\actions\\orderActions.js":"32","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\OrderScreen.js":"33","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\UserListScreen.js":"34","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\ProductListScreen.js":"35","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\UserEditScreen.js":"36"},{"size":315,"mtime":1612349281072,"results":"37","hashOfConfig":"38"},{"size":1968,"mtime":1622133365414,"results":"39","hashOfConfig":"38"},{"size":377,"mtime":1609571700294,"results":"40","hashOfConfig":"38"},{"size":1145,"mtime":1621605099587,"results":"41","hashOfConfig":"38"},{"size":3963,"mtime":1614275148030,"results":"42","hashOfConfig":"38"},{"size":2552,"mtime":1621433381882,"results":"43","hashOfConfig":"38"},{"size":1631,"mtime":1609651295623,"results":"44","hashOfConfig":"38"},{"size":809,"mtime":1609652188401,"results":"45","hashOfConfig":"38"},{"size":1934,"mtime":1626966977985,"results":"46","hashOfConfig":"38"},{"size":1214,"mtime":1612377372773,"results":"47","hashOfConfig":"38"},{"size":374,"mtime":1612361169152,"results":"48","hashOfConfig":"38"},{"size":1226,"mtime":1621604283229,"results":"49","hashOfConfig":"38"},{"size":254,"mtime":1612359552339,"results":"50","hashOfConfig":"38"},{"size":387,"mtime":1612359451713,"results":"51","hashOfConfig":"38"},{"size":3671,"mtime":1614398092281,"results":"52","hashOfConfig":"38"},{"size":1352,"mtime":1616601704410,"results":"53","hashOfConfig":"38"},{"size":244,"mtime":1616601629566,"results":"54","hashOfConfig":"38"},{"size":1250,"mtime":1617217829368,"results":"55","hashOfConfig":"38"},{"size":3434,"mtime":1621600442033,"results":"56","hashOfConfig":"38"},{"size":1306,"mtime":1625912820512,"results":"57","hashOfConfig":"38"},{"size":2245,"mtime":1616238951657,"results":"58","hashOfConfig":"38"},{"size":5430,"mtime":1626847753839,"results":"59","hashOfConfig":"38"},{"size":350,"mtime":1616225745536,"results":"60","hashOfConfig":"38"},{"size":3227,"mtime":1622132714065,"results":"61","hashOfConfig":"38"},{"size":5614,"mtime":1621279310326,"results":"62","hashOfConfig":"38"},{"size":2590,"mtime":1616580598480,"results":"63","hashOfConfig":"38"},{"size":1335,"mtime":1616580587049,"results":"64","hashOfConfig":"38"},{"size":1936,"mtime":1616651999356,"results":"65","hashOfConfig":"38"},{"size":5042,"mtime":1617217831469,"results":"66","hashOfConfig":"38"},{"size":2380,"mtime":1621279478508,"results":"67","hashOfConfig":"38"},{"size":827,"mtime":1621279438089,"results":"68","hashOfConfig":"38"},{"size":3403,"mtime":1621278347702,"results":"69","hashOfConfig":"38"},{"size":5081,"mtime":1617354499564,"results":"70","hashOfConfig":"38"},{"size":2771,"mtime":1622132582901,"results":"71","hashOfConfig":"38"},{"size":2852,"mtime":1621605143965,"results":"72","hashOfConfig":"38"},{"size":2697,"mtime":1622134584395,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"yy31kw",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\index.js",[],["156","157"],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\App.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Footer.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\HomeScreen.js",["158","159","160","161"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Spinner } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { productListReducer } from \"../reducers/productReducers\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, []);\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  return (\r\n    <>\r\n      <h3>Latest Products</h3>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" children>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\ProductScreen.js",["162","163"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { productDetails } from \"../actions/productActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(productDetails(match.params.id));\r\n  }, [dispatch]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const { loading, error, product } = useSelector(\r\n    (state) => state.productDetails\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={` ${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item> Price: ${product.price}</ListGroup.Item>\r\n              <ListGroup.Item>\r\n                Description: {product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <span>{product.price}</span>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      <span>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of stock\"}\r\n                      </span>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>\r\n                      <Button\r\n                        onClick={addToCartHandler}\r\n                        className=\"btn btn-block\"\r\n                        disabled={product.countInStock <= 0}\r\n                      >\r\n                        Add to Cart\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Header.js",["164"],"import React from \"react\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { logout } from \"../actions/userActions\";\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Proshop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <Link onClick={logoutHandler}>\r\n                    <NavDropdown.Item>Logout</NavDropdown.Item>\r\n                  </Link>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/ordertlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Rating.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Product.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\store.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\reducers\\productReducers.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\constants\\productConstants.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\actions\\productActions.js",["165"],"import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\"/api/products\");\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      error:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const productDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n      loading:false\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Message.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\Loader.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\CartScreen.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\reducers\\cartReducers.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\constants\\cartConstants.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\actions\\cartAction.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\reducers\\userReducer.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\constants\\userConstants.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\LoginScreen.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\actions\\userActions.js",["166"],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\components\\FormContainer.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\RegisterScreen.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\ProfileScreen.js",["167","168"],"import React, { useState, useEffect } from \"react\";\r\nimport { Col, FormControl, Row, Form, Button, Table } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderMyList = useSelector((state) => state.orderMyList);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderMyList;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //Dispatch REGISTER\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name,\r\n          email,\r\n          password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && <Message variant=\"success\">Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"Email\">\r\n            <Form.Label>Name</Form.Label>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></FormControl>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"Email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <FormControl\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></FormControl>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"Email\">\r\n            <Form.Label>Password</Form.Label>\r\n            <FormControl\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></FormControl>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"Email\">\r\n            <Form.Label>Confrim Password</Form.Label>\r\n            <FormControl\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></FormControl>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.delieveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant=\"light\">Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\ShippingScreen.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\CheckoutSteps.js",["169"],"import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payments\">\r\n            <Nav.Link>Payments</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payments</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\PaymentScreen.js",["170","171"],"import React, { useState } from \"react\";\r\nimport { Form, Button, FormControl, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveShippingAddress } from \"../actions/cartAction\";\r\nimport { savePaymentMethod } from \"../actions/cartAction\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"./CheckoutSteps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress) history.push(\"/shipping\");\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\reducers\\orderReducers.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\constants\\orderConstants.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\actions\\orderActions.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\OrderScreen.js",["172","173"],"import React from \"react\";\r\nimport { Button, Col, Row, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getOrderDetails } from \"../actions/orderActions\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const orderId = match.params.id;\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  if (!loading) {\r\n    // calculate price\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.qty * item.price, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(orderId));\r\n  }, [dispatch, orderId]);\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h2>Order {order._id}</h2>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name:</strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong>\r\n                <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered at {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method:</strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid at {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Your order is empty</Message>\r\n              ) : (\r\n                <Message variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x {item.price}= ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </Message>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary:</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\UserListScreen.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\ProductListScreen.js",[],"E:\\Prince\\Full Stack Projects\\ProShop\\frontend\\src\\screens\\UserEditScreen.js",["174"],"import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, FormCheck, Form, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n    if (!user || !user.name || user._id !== userId) {\r\n      dispatch(getUserDetails(userId));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    //Dispatch REGISTER\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userList\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"Email\">\r\n              <Form.Label>Name</Form.Label>\r\n              <FormControl\r\n                type=\"text\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></FormControl>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"Email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <FormControl\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></FormControl>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"Email\">\r\n              <FormCheck\r\n                type=\"checkbox\"\r\n                label=\"is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></FormCheck>\r\n            </Form.Group>\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":1,"column":28,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"183","line":2,"column":20,"nodeType":"181","messageId":"182","endLine":2,"endColumn":27},{"ruleId":"179","severity":1,"message":"184","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":28},{"ruleId":"185","severity":1,"message":"186","line":14,"column":6,"nodeType":"187","endLine":14,"endColumn":8,"suggestions":"188"},{"ruleId":"179","severity":1,"message":"189","line":10,"column":3,"nodeType":"181","messageId":"182","endLine":10,"endColumn":14},{"ruleId":"185","severity":1,"message":"190","line":25,"column":6,"nodeType":"187","endLine":25,"endColumn":16,"suggestions":"191"},{"ruleId":"179","severity":1,"message":"192","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":17},{"ruleId":"179","severity":1,"message":"193","line":7,"column":3,"nodeType":"181","messageId":"182","endLine":7,"endColumn":23},{"ruleId":"179","severity":1,"message":"194","line":241,"column":13,"nodeType":"181","messageId":"182","endLine":241,"endColumn":17},{"ruleId":"179","severity":1,"message":"195","line":16,"column":9,"nodeType":"181","messageId":"182","endLine":16,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":43,"column":6,"nodeType":"187","endLine":43,"endColumn":40,"suggestions":"196"},{"ruleId":"179","severity":1,"message":"197","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"189","line":2,"column":24,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"179","severity":1,"message":"198","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":29},{"ruleId":"179","severity":1,"message":"199","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":16},{"ruleId":"179","severity":1,"message":"200","line":31,"column":9,"nodeType":"181","messageId":"182","endLine":31,"endColumn":13},{"ruleId":"185","severity":1,"message":"201","line":29,"column":6,"nodeType":"187","endLine":29,"endColumn":12,"suggestions":"202"},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'productListReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["205"],"'FormControl' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["206"],"'NavLink' is defined but never used.","'PRODUCT_DETAILS_FAIL' is defined but never used.","'data' is assigned a value but never used.","'redirect' is assigned a value but never used.",["207"],"'Link' is defined but never used.","'saveShippingAddress' is defined but never used.","'Button' is defined but never used.","'cart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["208"],"no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [dispatch]",{"range":"217","text":"218"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"219","text":"220"},"Update the dependencies array to be: [history, userInfo, user, dispatch]",{"range":"221","text":"222"},"Update the dependencies array to be: [dispatch, user, userId]",{"range":"223","text":"224"},[548,550],"[dispatch]",[669,679],"[dispatch, match.params.id]",[1652,1686],"[history, userInfo, user, dispatch]",[1062,1068],"[dispatch, user, userId]"]